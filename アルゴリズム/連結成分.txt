【連結成分の個数(グループ分け)    (BFSによる探索) (Union-Findの方法もあるらしい)】


『単純無向グラフ』
ABC284  C- Conunt Connected Components(https://atcoder.jp/contests/abc284/submissions/37863510)
単純無向グラフの連結成分の個数, (および各グループ分け)


『座標上(2次元配列上)(グリッドグラフ)』
ARC031  B- 埋め立て (https://atcoder.jp/contests/arc031/submissions/37874386)
どこか1マスを埋め立てれば, 全体でひとつの連結なグラフに出来るか？


『(特殊な)座標上』
ABC269  D- Do use hexagon grid (https://atcoder.jp/contests/abc269/submissions/37869394)
連結成分の個数 (およびグループ分け)


『連結成分にグループ分けして, 各グループごとの頂点数と辺数を算出』
ABC292-D Uncyclic Components
無向グラフ(単純とは限らない)のすべての連結成分が, 「その連結成分に含まれる頂点の個数と辺の本数が等しい」を満たすか判定
(https://atcoder.jp/contests/abc292/submissions/39423922)
ARC037-D バウムテスト (木の数え上げ)
(https://atcoder.jp/contests/arc037/submissions/47171263)

ABC293-D Tying Rope
無向グラフ(頂点の次数は2以下,単純とは限らない)の, 環状になっている連結成分の個数と,環状になっていない連結成分の個数を出力。
-> 今回の条件では, その連結成分が環状になっている = その連結成分の頂点数と辺数が等しい 
(https://atcoder.jp/contests/abc293/submissions/39622775)
 




【有向グラフにおける強連結成分分解(SCC)(Strongly Connected Component)】=> 強連結成分の個数 = グラフの頂点数  ならば トポロジカルソートが存在するDAGになる(閉路なし) (, 多分。)

(コード) Atcoder Library Practice Contest   (G  SCC)
https://atcoder.jp/contests/practice2/submissions/44402458   (0-index) 

(単純とは限らない有向グラフの強連結成分分解)
<入力>
N頂点(頂点idが0～N-1) M辺
有向辺の情報

<出力>
強連結成分の個数
その強連結成分に属する頂点の個数, その強連結成分に属する頂点idを列挙
↓(この強連結成分はトポロジカルソートの順(DAGにしたときの上流から下流へ)になっている)


・有向グラフにおける連結成分には弱連結成分と強連結成分がある。
・弱連結成分とは要するに無向グラフだと考えたときの(辺の向きを無視したときの)いわゆる普通の連結成分。
・強連結成分とは, 有向グラフにおいて「互いに行き来できる」連結成分のことを言う。

※有向グラフにおける強連結成分はDAGを形成し, トポロジカルソート可能である。 -> DPの更新順序が非自明なときに線形DPできるようになったり(PAST本p201) メモ化再帰がよかったり


<アルゴリズム>
(高校数学の美しい物語 https://manabitimes.jp/math/1250)
(https://hkawabata.github.io/technical-note/note/Algorithm/graph/scc.html)

STEP1 
すべての頂点(頂点id 0～N-1)が探索済になるまで, 任意の頂点を始点としてDFSし, 
帰りがけ順に, 頂点に1から番号をラベリングしていく。

STEP2 
辺の向きを逆にした逆グラフを構成

STEP3
逆グラフにおいて,
未探索頂点の内, ラベルされている番号が最も大きい頂点(元のグラフで上流にある=逆グラフで下流にある)から, 
DFSをして, 辿った頂点集合が一つの強連結成分になる。



PyPyで4秒程度。(N, M <= 500000)
多重辺や自己ループの扱い,DFS時に探索済頂点集合に入れるタイミングなど考えると
もうすこし速くなりそうな気もする... 
