＃レーベンシュタイン距離(編集距離)
文字列SとTの類似度を測る。(編集距離が小さいほど類似している)
計算量O(|S||T|)

以下の三種類の操作のいずれかを,何回行えば文字列SをTに一致させることができるか？
・Sの中から一文字を削除する
・Sの任意の位置に,好きな文字を挿入する
・Sの任意の文字を, 好きな文字に変更する

SとTの長さが等しいときをハミング距離といい, 異なる長さに一般化したものをレーベンシュタイン距離という。




(https://mathwords.net/hensyukyori)

LCSのようなイメージで,二次元の動的計画法を行い,各マスに最小の編集距離をメモしていく。
一番右下に書かれた数字dp[-1][-1]が答え。

LCS(最初の行と最初の列を0)と違って, 最初の行と最初の列は, 0 ～　｜文字列の長さ｜で初期化する。

三通りの遷移のうちのminを各マスに記入する。
・上のマス+1
・左のマス+1
・左上のマス+1 (or その位置の文字がマッチしているなら左上のマス+0)

この遷移の意味は, 実際に書き出せば雰囲気は感じられる。(厳密な言語化や理解はむつかしい...)




【鉄則B20】(https://atcoder.jp/contests/tessoku-book/submissions/35066807)