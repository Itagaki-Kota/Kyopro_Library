【ワーシャルフロイド法】
全点対間最短経路(すべての頂点の組についての最短距離)をO(N**3)で求める。
辺の重みが負であっても構わない。(負閉路(辺の重みの総和が負になるサイクル)があるとダメ)

distの各要素は非常に大きい値(∞)で初期化しておく。
辺が存在する箇所はそのコストを入れていく。(重み無しならばコスト1)
最終的に 最短距離が∞の頂点は到達不可能ということ。


(原理はよくわからない...)
鉄則本p406
PAST本299-307  (https://atcoder.jp/contests/typical-algorithm/submissions/36781149)
↑辺の入力を受け取ってから対角成分を0にした方がよいのでは？

三重ループのところの変数名
xがfromで, yはto, kがvia(経由地)だよね。



【ABC143 E - Travel by Car (https://atcoder.jp/contests/abc143/submissions/37900824)】
独立クエリ型 (PAST本p332)
ある頂点から別のある頂点へ移動するためのコストの総和(最短経路長)がL以下であれば, その移動は燃料Lあったとき一度も補給せずに一足飛びに移動できるため, 
コスト1の辺を張る。
すなわち, 各頂点間の最短距離を求めるためにワーシャルフロイド法を使って, 最短距離L以下の頂点同士をコスト1の辺で接続する。
こういう新しいグラフを作って, 新しいグラフ上で再びワーシャルフロイド法を行い,各頂点間の最短距離を求める。

例えば, この「最短距離が1」ならば「0回の補給で移動できる」ということなので, 
各クエリに対して, 二度目のワーシャルフロイドで作った二次元の配列を基に, 
ある頂点から別の頂点への, 最短距離 - 1 を出力すればよい。（それが最小の補給回数） 